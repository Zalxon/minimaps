{"version":3,"file":"index.module.js","sources":["../src/regl.js","../src/minimap.js","../src/raster.js","../src/sphere.js","../src/path.js","../src/graticule.js"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n} from 'react'\nimport _regl from 'regl'\n\nexport const ReglContext = createContext(null)\n\nexport const useRegl = () => {\n  return useContext(ReglContext)\n}\n\nconst Regl = ({ style, aspect, children }) => {\n  const regl = useRef()\n  const container = useRef(null)\n  const resize = useRef()\n  const [ready, setReady] = useState(false)\n  const [viewport, setViewport] = useState({ width: null, height: null })\n\n  useEffect(() => {\n    resize.current = () => {\n      container.current.style.height =\n        container.current.offsetWidth * aspect + 'px'\n\n      setViewport({\n        height: container.current.offsetWidth\n          ? container.current.offsetWidth * aspect\n          : container.current.style.height,\n        width: container.current.offsetWidth,\n      })\n    }\n    window.addEventListener('resize', resize.current)\n    resize.current()\n\n    if (!regl.current) {\n      regl.current = _regl({\n        container: container.current,\n        extensions: ['OES_texture_float', 'OES_element_index_uint'],\n      })\n      setReady(true)\n    }\n\n    return () => {\n      window.removeEventListener('resize', resize.current)\n    }\n  }, [aspect])\n\n  useEffect(() => {\n    return () => {\n      if (regl.current) regl.current.destroy()\n      setReady(false)\n    }\n  }, [])\n\n  return (\n    <ReglContext.Provider\n      value={{\n        regl: regl.current,\n        viewport,\n      }}\n    >\n      <div style={{ width: '100%', ...style }} ref={container} />\n      {ready && children}\n    </ReglContext.Provider>\n  )\n}\n\nexport default Regl\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  createContext,\n  useContext,\n} from 'react'\nimport Regl from './regl'\n\nconst DEFAULTS = {\n  naturalEarth1: {\n    aspect: 0.5,\n    scale: 1,\n    translate: [0, 0],\n  },\n  orthographic: {\n    aspect: 1,\n    scale: 3,\n    translate: [0, 0],\n  },\n  mercator: {\n    aspect: 1,\n    scale: 1,\n    translate: [0, 0],\n  },\n  equirectangular: {\n    aspect: 0.5,\n    scale: 1,\n    translate: [0, 0],\n  },\n}\n\nconst MinimapContext = createContext(null)\n\nexport const useMinimap = () => {\n  return useContext(MinimapContext)\n}\n\nconst Minimap = ({\n  id,\n  tabIndex,\n  className,\n  children,\n  projection: getProjection,\n  style,\n  aspect: aspectProp,\n  scale: scaleProp,\n  translate: translateProp,\n}) => {\n  const [projection, setProjection] = useState({\n    value: getProjection(),\n    scale: scaleProp,\n    aspect: aspectProp,\n    translate: translateProp,\n  })\n\n  const WIDTH = 800\n\n  useEffect(() => {\n    const updatedProjection = getProjection()\n    const defaults = DEFAULTS[updatedProjection.id]\n    const updatedScale = scaleProp || defaults.scale\n    const updatedAspect = aspectProp || defaults.aspect\n    const updatedTranslate = translateProp || defaults.translate\n\n    updatedProjection.scale(updatedScale * (WIDTH / (2 * Math.PI)))\n    updatedProjection.translate([\n      ((1 + updatedTranslate[0]) * WIDTH) / 2,\n      ((1 + updatedTranslate[1]) * updatedAspect * WIDTH) / 2,\n    ])\n\n    setProjection({\n      scale: updatedScale,\n      aspect: updatedAspect,\n      value: updatedProjection,\n      translate: updatedTranslate,\n    })\n  }, [getProjection, scaleProp, aspectProp, translateProp])\n\n  return (\n    <MinimapContext.Provider\n      value={{\n        projection: projection.value,\n        translate: projection.translate,\n        scale: projection.scale,\n        aspect: projection.aspect,\n        width: WIDTH,\n        height: WIDTH * projection.aspect,\n      }}\n    >\n      <div\n        id={id}\n        tabIndex={tabIndex}\n        className={className}\n        style={{\n          position: 'relative',\n          width: '100%',\n          overflow: 'hidden',\n          ...style,\n        }}\n      >\n        <Regl\n          aspect={projection.aspect}\n          style={{\n            pointerEvents: 'none',\n            zIndex: -1,\n          }}\n        >\n          <svg\n            viewBox={`0 0 ${WIDTH} ${WIDTH * projection.aspect}`}\n            style={{\n              position: 'absolute',\n              width: '100%',\n              top: 0,\n              left: 0,\n              overflow: 'hidden',\n              pointerEvents: 'none',\n            }}\n          >\n            {children}\n          </svg>\n        </Regl>\n      </div>\n    </MinimapContext.Provider>\n  )\n}\n\nexport default Minimap\n","import React, { useState, useEffect, useRef } from 'react'\nimport { extname } from 'path'\nimport { useRegl } from './regl'\nimport { useMinimap } from './minimap'\nimport zarr from 'zarr-js'\n\nconst validateGroup = (data, variable) => {\n  if (!Object.keys(data).includes(variable)) {\n    throw new Error(\n      `variable ${variable} not found in zarr dataset, options are: ${Object.keys(\n        data\n      )}`\n    )\n  }\n\n  return true\n}\n\nconst getBounds = ({ data, lat, lon }) => {\n  return {\n    lat: [\n      data[lat].data.reduce((a, b) => Math.min(a, b)),\n      data[lat].data.reduce((a, b) => Math.max(a, b)),\n    ],\n    lon: [\n      data[lon].data.reduce((a, b) => Math.min(a, b)),\n      data[lon].data.reduce((a, b) => Math.max(a, b)),\n    ],\n  }\n}\n\nconst NORTH_POLE = [0, 90]\n\nconst Raster = ({\n  source,\n  variable,\n  mode = 'rgb',\n  colormap = null,\n  clim = null,\n  transpose,\n  northPole = NORTH_POLE,\n  nullValue = -999,\n  bounds = null,\n  lat = 'lat',\n  lon = 'lon',\n}) => {\n  const { viewport, regl } = useRegl()\n  const { scale, translate, projection } = useMinimap()\n\n  if (mode == 'lut' && !colormap) {\n    throw new Error(\"must provide 'colormap' when using 'lut' mode\")\n  }\n\n  if (mode == 'lut' && !clim) {\n    throw new Error(\"must provide 'clim' when using 'lut' mode\")\n  }\n\n  const redraw = useRef()\n  const draw = useRef()\n  const texture = useRef()\n  const lut = useRef()\n  const context = useRef({})\n  const isLoaded = useRef(false)\n  const boundsRef = useRef(null)\n  const zarrGroupCache = useRef()\n  const invalidated = useRef(null)\n\n  useEffect(() => {\n    regl.frame((_context) => {\n      context.current = _context\n\n      if (invalidated.current) {\n        regl.clear({\n          color: [0, 0, 0, 0],\n          depth: 1,\n        })\n\n        redraw.current(invalidated.current)\n      }\n      invalidated.current = null\n    })\n  }, [])\n\n  useEffect(() => {\n    texture.current ||= regl.texture({\n      width: 1,\n      height: 1,\n      data: [0, 0, 0, 0],\n    })\n\n    lut.current ||= regl.texture()\n\n    const position = [\n      0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0,\n    ]\n\n    let uniforms = {\n      pixelRatio: regl.prop('pixelRatio'),\n      viewportWidth: regl.prop('viewportWidth'),\n      viewportHeight: regl.prop('viewportHeight'),\n      texture: regl.prop('texture'),\n      scale: regl.prop('scale'),\n      translate: regl.prop('translate'),\n      northPole: regl.prop('northPole'),\n      transpose: regl.prop('transpose'),\n      nullValue: regl.prop('nullValue'),\n      bounds: regl.prop('bounds'),\n    }\n\n    if (mode === 'lut') {\n      uniforms = {\n        ...uniforms,\n        lut: regl.prop('lut'),\n        clim: regl.prop('clim'),\n      }\n    }\n\n    draw.current = regl({\n      vert: `\n      #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      #else\n      precision mediump float;\n      #endif\n      attribute vec2 position;\n      varying vec2 uv;\n      void main() {\n        uv = vec2(position.y, position.x);\n        gl_Position = vec4(2.0 * position.x - 1.0, 2.0 * position.y - 1.0, 0.0, 1.0);\n      }\n      `,\n\n      frag: `\n      #ifdef GL_FRAGMENT_PRECISION_HIGH\n      precision highp float;\n      #else\n      precision mediump float;\n      #endif\n      varying vec2 uv;\n      uniform vec2 clim;\n      uniform vec4 bounds;\n      uniform float viewportWidth;\n      uniform float viewportHeight;\n      uniform sampler2D texture;\n      uniform float pixelRatio;\n      uniform float scale;\n      uniform vec2 translate;\n      uniform vec2 northPole;\n      uniform bool transpose;\n      uniform float nullValue;\n      ${mode === 'lut' ? 'uniform sampler2D lut;' : ''}\n      ${mode === 'lut' ? 'uniform vec3 nullColor;' : ''}\n\n      const float pi = 3.14159265358979323846264;\n      const float halfPi = pi * 0.5;\n      const float twoPi = pi * 2.0;\n\n      bool isnan(float val)\n      {\n        return ( val < 0.0 || 0.0 < val || val == 0.0 ) ? false : true;\n      }\n\n      vec2 rotateCoords(vec2 coords, vec2 northPole) {\n        // Calculate rotation based of north pole coordinates of rotated grid\n        float phiOffset = northPole.y == 90.0 ? 0.0 : 180.0;\n        float phi = radians(phiOffset + northPole.x);\n        float theta = radians(-1.0 * (90.0 - northPole.y));\n\n        float lon = radians(coords.x);\n        float lat = radians(coords.y);\n\n        // Convert from spherical to cartesian coordinates\n        vec3 unrotatedCoord = vec3(cos(lon) * cos(lat), sin(lon) * cos(lat), sin(lat));\n\n        // From https://en.wikipedia.org/wiki/Rotation_matrix#General_rotations\n        mat3 intrinsicRotation = mat3(\n          cos(phi) * cos(theta), -1.0 * sin(phi), cos(phi) * sin(theta),\n          sin(phi) * cos(theta), cos(phi)       , sin(phi) * sin(theta),\n          -1.0 * sin(theta)    , 0              , cos(theta)\n        );\n\n        vec3 rotatedCoord = intrinsicRotation * unrotatedCoord;\n\n        // Convert from cartesian to spherical coordinates\n        float rotatedLon = degrees(atan(rotatedCoord.y, rotatedCoord.x));\n        float rotatedLat = degrees(asin(rotatedCoord.z));\n\n        return vec2(rotatedLon, rotatedLat);\n      }\n\n      ${projection.glsl.func}\n      void main() {\n        \n        float width = viewportWidth / pixelRatio;\n        float height = viewportHeight / pixelRatio;\n        float x = gl_FragCoord.x / pixelRatio;\n        float y = gl_FragCoord.y / pixelRatio;\n\n        vec2 delta = vec2((1.0 + translate.x) * width / 2.0, (1.0 - translate.y) * height / 2.0);        \n\n        x = (x - delta.x) / (scale * (width / (pi * 2.0)));\n        ${\n          transpose\n            ? `y = (delta.y - y) / (scale * (width / (pi * 2.0)));`\n            : `y = (y - delta.y) / (scale * (width / (pi * 2.0)));`\n        }\n\n        vec2 lookup = ${projection.glsl.name}(x, y);\n        vec2 rotated = rotateCoords(lookup, northPole);\n\n        // Handle points that wrap\n        float offsetX = 0.0;\n        if (rotated.x < bounds[2]) {\n          offsetX = 360.0;\n        } else if (rotated.x > bounds[3]) {\n          offsetX = -360.0;\n        }\n\n        float scaleY = 180.0 / abs(bounds[0] - bounds[1]);\n        float scaleX = 360.0 / abs(bounds[2] - bounds[3]);\n        float translateY = 90.0 + bounds[0];\n        float translateX = 180.0 + bounds[2];\n\n        float rescaledY = scaleY * (radians(rotated.y - translateY) + halfPi) / pi;\n        float rescaledX = scaleX * (radians(rotated.x + offsetX - translateX) + pi) / twoPi;\n\n        vec2 coord;\n        ${\n          transpose\n            ? `coord = vec2(rescaledX, rescaledY);`\n            : `coord = vec2(rescaledY, rescaledX);`\n        }\n\n        vec4 value = texture2D(texture, coord);\n\n        bool inboundsY = rotated.y > bounds[0] && rotated.y < bounds[1];\n        bool inboundsX = rotated.x + offsetX > bounds[2] && rotated.x + offsetX < bounds[3];\n\n        ${\n          mode === 'lut'\n            ? `\n          vec4 c;\n          if ((!inboundsY || !inboundsX) || (value.x == nullValue || isnan(value.x))) {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n          } else {\n            float rescaled = (value.x - clim.x)/(clim.y - clim.x);\n            c = texture2D(lut, vec2(rescaled, 1.0));\n            gl_FragColor = vec4(c.x, c.y, c.z, 1.0);\n          }`\n            : ''\n        }\n\n        ${\n          mode === 'rgb'\n            ? `\n          if (value.x == nullValue) {\n            gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n          } else {\n            gl_FragColor = vec4(value.x , value.y, value.z, 1.0);\n          }\n        `\n            : ''\n        }\n      }\n      `,\n\n      attributes: {\n        position: position,\n      },\n\n      uniforms: uniforms,\n\n      count: 6,\n\n      primitive: 'triangles',\n    })\n  }, [projection.glsl.name])\n\n  redraw.current = (invalidatedBy) => {\n    if (draw.current && isLoaded.current) {\n      const { pixelRatio } = context.current\n      draw.current({\n        texture: texture.current,\n        lut: lut.current,\n        bounds: boundsRef.current\n          ? [\n              boundsRef.current.lat[0],\n              boundsRef.current.lat[1],\n              boundsRef.current.lon[0],\n              boundsRef.current.lon[1],\n            ]\n          : [-90, 90, -180, 180],\n        scale,\n        translate,\n        northPole,\n        clim,\n        nullValue,\n        viewportWidth: viewport.width * pixelRatio,\n        viewportHeight: viewport.height * pixelRatio,\n        pixelRatio,\n      })\n    }\n  }\n\n  useEffect(() => {\n    // handle loading asynchronously from a specified path\n    if (typeof source === 'string') {\n      const ext = extname(source)\n\n      // handle images\n      if (['.png', '.jpg', '.jpeg'].includes(ext)) {\n        const image = document.createElement('img')\n        image.src = source\n        image.crossOrigin = 'anonymous'\n        image.onload = function () {\n          setTimeout(() => {\n            isLoaded.current = true\n            texture.current(image)\n            invalidated.current = 'on image load'\n          }, 0)\n        }\n      }\n\n      // handle zarr groups and arrays\n      if (ext === '.zarr') {\n        if (variable) {\n          zarr().loadGroup(source, (error, data, metadata) => {\n            validateGroup(data, variable)\n\n            if (!bounds && data[lat] && data[lon]) {\n              boundsRef.current = getBounds({ data, lat, lon })\n            }\n            zarrGroupCache.current = data\n            isLoaded.current = true\n            texture.current(zarrGroupCache.current[variable])\n            invalidated.current = 'on zarr group load'\n          })\n        } else {\n          zarr().load(source, (error, data) => {\n            isLoaded.current = true\n            texture.current(data)\n            invalidated.current = 'on zarr array load'\n          })\n        }\n      }\n      // handle loading synchronously from pre-fetched zarr data\n    } else {\n      if (variable) {\n        validateGroup(source, variable)\n\n        if (!bounds && source[lat] && source[lon]) {\n          boundsRef.current = getBounds({ data: source, lat, lon })\n        }\n\n        zarrGroupCache.current = source\n        isLoaded.current = true\n        texture.current(zarrGroupCache.current[variable])\n        invalidated.current = 'on zarr group read'\n      } else {\n        isLoaded.current = true\n        texture.current(source)\n        invalidated.current = 'on zarr array read'\n      }\n    }\n  }, [source, lat, lon])\n\n  useEffect(() => {\n    // handle variable change on cached zarr group data\n    if (zarrGroupCache.current) {\n      texture.current(zarrGroupCache.current[variable])\n      invalidated.current = 'on variable change'\n    }\n  }, [variable])\n\n  useEffect(() => {\n    if (bounds) {\n      boundsRef.current = bounds\n    }\n    invalidated.current = 'on bounds change'\n  }, [\n    bounds && bounds.lat[0],\n    bounds && bounds.lat[1],\n    bounds && bounds.lon[0],\n    bounds && bounds.lon[1],\n  ])\n\n  useEffect(() => {\n    if (colormap) {\n      lut.current({\n        data: colormap,\n        format: 'rgb',\n        shape: [colormap.length, 1],\n      })\n      invalidated.current = 'on colormap change'\n    }\n  }, [colormap])\n\n  useEffect(() => {\n    invalidated.current = 'on viewport change'\n  }, [viewport])\n\n  useEffect(() => {\n    invalidated.current = 'on prop change'\n  }, [\n    clim && clim[0],\n    clim && clim[1],\n    mode,\n    scale,\n    translate[0],\n    translate[1],\n    northPole ? northPole[0] : undefined,\n    northPole ? northPole[1] : undefined,\n    nullValue,\n    projection,\n  ])\n\n  return null\n}\n\nexport default Raster\n","import React, { useState, useEffect } from 'react'\nimport { geoPath } from 'd3-geo'\nimport { useMinimap } from './minimap'\n\nconst Sphere = ({ fill, stroke, strokeWidth = 0.5, opacity = 0.2 }) => {\n  const { projection, width, height } = useMinimap()\n  const [path, setPath] = useState()\n  // replace with uui\n  const id = String(Math.floor(Math.random() * 100))\n\n  useEffect(() => {\n    setPath(geoPath(projection)({ type: 'Sphere' }))\n  }, [projection])\n\n  return (\n    <svg\n      viewBox={`0 0 ${width} ${height}`}\n      style={{ position: 'absolute', width: '100%', top: 0, left: 0 }}\n    >\n      <mask id={id}>\n        <rect x='0' y='0' width='100%' height='100%' fill='#FFFFFF' />\n        <path fill='#000000' id='circle-cutout' d={path} />\n      </mask>\n      <rect\n        x='0'\n        y='0'\n        width='100%'\n        height='100%'\n        mask={`url(#${id})`}\n        style={{ fill: fill }}\n      />\n      {stroke && (\n        <path\n          fill='none'\n          stroke={stroke}\n          strokeWidth={strokeWidth}\n          opacity={opacity}\n          style={{\n            vectorEffect: 'non-scaling-stroke',\n          }}\n          d={path}\n        />\n      )}\n    </svg>\n  )\n}\n\nexport default Sphere\n","import React, { useEffect, useState } from 'react'\nimport { geoPath } from 'd3-geo'\nimport { feature as topoFeature } from 'topojson-client'\nimport { useMinimap } from './minimap'\n\nconst Path = ({\n  source,\n  feature,\n  fill = 'none',\n  stroke = 'none',\n  strokeWidth = 0.5,\n  opacity = 0.7,\n}) => {\n  const [path, setPath] = useState()\n  const [data, setData] = useState()\n  const { projection, width, height } = useMinimap()\n\n  useEffect(() => {\n    fetch(source)\n      .then((response) => response.json())\n      .then((topology) => {\n        setData(topoFeature(topology, topology.objects[feature]))\n      })\n  }, [source])\n\n  useEffect(() => {\n    setPath(geoPath(projection)(data))\n  }, [data, projection])\n\n  return (\n    <path\n      d={path}\n      stroke={stroke}\n      fill={fill}\n      opacity={opacity}\n      strokeWidth={strokeWidth}\n      style={{\n        vectorEffect: 'non-scaling-stroke',\n      }}\n    />\n  )\n}\n\nexport default Path\n","import React from 'react'\nimport { geoPath, geoGraticule } from 'd3-geo'\nimport { useMinimap } from './minimap'\n\nconst Graticule = ({\n  stroke,\n  strokeWidth = 0.5,\n  step = [45, 45],\n  opacity = 0.2,\n}) => {\n  const { projection, width, height } = useMinimap()\n\n  const eps = projection.id === 'mercator' ? 0 : 0.1\n\n  return (\n    <path\n      d={geoPath(projection)(\n        geoGraticule()\n          .step(step)\n          .extentMajor([\n            [-180 - eps, -90 - eps],\n            [180 + eps, 90 + eps],\n          ])()\n      )}\n      stroke={stroke}\n      fill={'none'}\n      opacity={opacity}\n      strokeWidth={strokeWidth}\n      style={{\n        vectorEffect: 'non-scaling-stroke',\n      }}\n    />\n  )\n}\n\nexport default Graticule\n"],"names":["ReglContext","createContext","Regl","_ref","style","aspect","children","regl","useRef","container","resize","_useState","useState","ready","setReady","_useState2","width","height","viewport","setViewport","useEffect","current","offsetWidth","window","addEventListener","_regl","extensions","removeEventListener","destroy","React","createElement","Provider","value","_extends","ref","DEFAULTS","naturalEarth1","scale","translate","orthographic","mercator","equirectangular","MinimapContext","useMinimap","useContext","Minimap","id","tabIndex","className","getProjection","projection","aspectProp","scaleProp","translateProp","setProjection","WIDTH","updatedProjection","defaults","updatedScale","updatedAspect","updatedTranslate","Math","PI","position","overflow","pointerEvents","zIndex","viewBox","top","left","validateGroup","data","variable","Object","keys","includes","Error","getBounds","lat","lon","reduce","a","b","min","max","NORTH_POLE","Raster","_ref2","source","_ref2$mode","mode","_ref2$colormap","colormap","_ref2$clim","clim","transpose","_ref2$northPole","northPole","_ref2$nullValue","nullValue","_ref2$bounds","bounds","_ref2$lat","_ref2$lon","_useRegl","_useMinimap","redraw","draw","texture","lut","context","isLoaded","boundsRef","zarrGroupCache","invalidated","frame","_context","clear","color","depth","uniforms","pixelRatio","prop","viewportWidth","viewportHeight","vert","frag","glsl","func","name","attributes","count","primitive","invalidatedBy","ext","extname","image","document","src","crossOrigin","onload","setTimeout","zarr","loadGroup","error","metadata","load","format","shape","length","undefined","Sphere","fill","stroke","_ref$strokeWidth","strokeWidth","_ref$opacity","opacity","path","setPath","String","floor","random","geoPath","type","x","y","d","mask","vectorEffect","Path","feature","_ref$fill","_ref$stroke","setData","fetch","then","response","json","topology","topoFeature","objects","Graticule","_ref$step","step","eps","geoGraticule","extentMajor"],"mappings":"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"}